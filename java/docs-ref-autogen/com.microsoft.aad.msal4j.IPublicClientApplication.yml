### YamlMime:JavaType
uid: "com.microsoft.aad.msal4j.IPublicClientApplication"
fullName: "com.microsoft.aad.msal4j.IPublicClientApplication"
name: "IPublicClientApplication"
nameWithType: "IPublicClientApplication"
summary: "Interface representing a public client application (Desktop, Mobile)."
syntax: "public interface **IPublicClientApplication**</br> extends <xref href=\"com.microsoft.aad.msal4j.IClientApplicationBase?alt=com.microsoft.aad.msal4j.IClientApplicationBase&text=IClientApplicationBase\" data-throw-if-not-resolved=\"False\" />"
methods:
- uid: "com.microsoft.aad.msal4j.IPublicClientApplication.acquireToken(com.microsoft.aad.msal4j.DeviceCodeFlowParameters)"
  fullName: "com.microsoft.aad.msal4j.IPublicClientApplication.acquireToken(DeviceCodeFlowParameters parameters)"
  name: "acquireToken(DeviceCodeFlowParameters parameters)"
  nameWithType: "IPublicClientApplication.acquireToken(DeviceCodeFlowParameters parameters)"
  summary: "Acquires security token from the authority using an device code flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "instance of <xref uid=\"com.microsoft.aad.msal4j.DeviceCodeFlowParameters\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceCodeFlowParameters\"></xref>"
    name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.DeviceCodeFlowParameters?alt=com.microsoft.aad.msal4j.DeviceCodeFlowParameters&text=DeviceCodeFlowParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<IAuthenticationResult> acquireToken(DeviceCodeFlowParameters parameters)"
  desc: "Acquires security token from the authority using an device code flow. Flow is designed for devices that do not have access to a browser or have input constraints. The authorization server issues DeviceCode object with verification code, an end-user code and the end-user verification URI. DeviceCode is provided through deviceCodeConsumer callback. End-user should be instructed to use another device to connect to the authorization server to approve the access request. Since the client cannot receive incoming requests, it polls the authorization server repeatedly until the end-user completes the approval process."
  returns:
    description: "<xref uid=\"java.util.concurrent.CompletableFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CompletableFuture\"></xref> containing an <xref uid=\"com.microsoft.aad.msal4j.IAuthenticationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAuthenticationResult\"></xref>"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.IPublicClientApplication.acquireToken(com.microsoft.aad.msal4j.IntegratedWindowsAuthenticationParameters)"
  fullName: "com.microsoft.aad.msal4j.IPublicClientApplication.acquireToken(IntegratedWindowsAuthenticationParameters parameters)"
  name: "acquireToken(IntegratedWindowsAuthenticationParameters parameters)"
  nameWithType: "IPublicClientApplication.acquireToken(IntegratedWindowsAuthenticationParameters parameters)"
  summary: "Acquires tokens from the authority configured in the application via Integrated Windows Authentication."
  modifiers:
  - "abstract"
  parameters:
  - description: "instance of <xref uid=\"com.microsoft.aad.msal4j.IntegratedWindowsAuthenticationParameters\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntegratedWindowsAuthenticationParameters\"></xref>"
    name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.IntegratedWindowsAuthenticationParameters?alt=com.microsoft.aad.msal4j.IntegratedWindowsAuthenticationParameters&text=IntegratedWindowsAuthenticationParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<IAuthenticationResult> acquireToken(IntegratedWindowsAuthenticationParameters parameters)"
  desc: "Acquires tokens from the authority configured in the application via Integrated Windows Authentication."
  returns:
    description: "<xref uid=\"java.util.concurrent.CompletableFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CompletableFuture\"></xref> containing an <xref uid=\"com.microsoft.aad.msal4j.IAuthenticationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAuthenticationResult\"></xref>"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.IPublicClientApplication.acquireToken(com.microsoft.aad.msal4j.InteractiveRequestParameters)"
  fullName: "com.microsoft.aad.msal4j.IPublicClientApplication.acquireToken(InteractiveRequestParameters parameters)"
  name: "acquireToken(InteractiveRequestParameters parameters)"
  nameWithType: "IPublicClientApplication.acquireToken(InteractiveRequestParameters parameters)"
  summary: "Acquires tokens from the authority using authorization code grant."
  modifiers:
  - "abstract"
  parameters:
  - description: "instance of <xref uid=\"com.microsoft.aad.msal4j.InteractiveRequestParameters\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveRequestParameters\"></xref>"
    name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.InteractiveRequestParameters?alt=com.microsoft.aad.msal4j.InteractiveRequestParameters&text=InteractiveRequestParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<IAuthenticationResult> acquireToken(InteractiveRequestParameters parameters)"
  desc: "Acquires tokens from the authority using authorization code grant. Will attempt to open the default system browser where the user can input the credentials interactively, consent to scopes, and do multi-factor authentication if such a policy is enabled on the Azure AD tenant. System browser can behavior can be customized via <xref uid=\"com.microsoft.aad.msal4j.InteractiveRequestParameters.systemBrowserOptions*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveRequestParameters#systemBrowserOptions\"></xref>. For more information, see https://aka.ms/msal4j-interactive-request"
  returns:
    description: "<xref uid=\"java.util.concurrent.CompletableFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CompletableFuture\"></xref> containing an <xref uid=\"com.microsoft.aad.msal4j.IAuthenticationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAuthenticationResult\"></xref>"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.IPublicClientApplication.acquireToken(com.microsoft.aad.msal4j.UserNamePasswordParameters)"
  fullName: "com.microsoft.aad.msal4j.IPublicClientApplication.acquireToken(UserNamePasswordParameters parameters)"
  name: "acquireToken(UserNamePasswordParameters parameters)"
  nameWithType: "IPublicClientApplication.acquireToken(UserNamePasswordParameters parameters)"
  summary: "Acquires tokens from the authority configured in the application via Username/Password authentication."
  modifiers:
  - "abstract"
  parameters:
  - description: "instance of <xref uid=\"com.microsoft.aad.msal4j.UserNamePasswordParameters\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UserNamePasswordParameters\"></xref>"
    name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.UserNamePasswordParameters?alt=com.microsoft.aad.msal4j.UserNamePasswordParameters&text=UserNamePasswordParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<IAuthenticationResult> acquireToken(UserNamePasswordParameters parameters)"
  desc: "Acquires tokens from the authority configured in the application via Username/Password authentication."
  returns:
    description: "<xref uid=\"java.util.concurrent.CompletableFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CompletableFuture\"></xref> containing an <xref uid=\"com.microsoft.aad.msal4j.IAuthenticationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAuthenticationResult\"></xref>"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Interface representing a public client application (Desktop, Mobile). Public client application are not trusted to safely store application secrets, and therefore can only request tokens in the name of an user. For details see https://aka.ms/msal4jclientapplications"
implements:
- "<xref href=\"com.microsoft.aad.msal4j.IClientApplicationBase?alt=com.microsoft.aad.msal4j.IClientApplicationBase&text=IClientApplicationBase\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.aad.msal4j"
artifact: com.microsoft.azure:msal4j:1.17.2
