### YamlMime:JavaType
uid: "com.microsoft.aad.msal4j.PublicClientApplication"
fullName: "com.microsoft.aad.msal4j.PublicClientApplication"
name: "PublicClientApplication"
nameWithType: "PublicClientApplication"
summary: "Class to be used to acquire tokens for public client applications (Desktop, Mobile)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase?alt=com.microsoft.aad.msal4j.AbstractApplicationBase&text=AbstractApplicationBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.connectTimeoutForDefaultHttpClient()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.connectTimeoutForDefaultHttpClient&text=connectTimeoutForDefaultHttpClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.correlationId()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.correlationId&text=correlationId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.httpClient()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.httpClient&text=httpClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.logPii()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.logPii&text=logPii\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.proxy()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.proxy&text=proxy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.readTimeoutForDefaultHttpClient()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.readTimeoutForDefaultHttpClient&text=readTimeoutForDefaultHttpClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.sslSocketFactory()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.sslSocketFactory&text=sslSocketFactory\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase&text=AbstractClientApplicationBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.aadAadInstanceDiscoveryResponse()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.aadAadInstanceDiscoveryResponse&text=aadAadInstanceDiscoveryResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken(com.microsoft.aad.msal4j.AuthorizationCodeParameters)?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken&text=acquireToken\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken(com.microsoft.aad.msal4j.RefreshTokenParameters)?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken&text=acquireToken\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireTokenSilently(com.microsoft.aad.msal4j.SilentParameters)?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireTokenSilently&text=acquireTokenSilently\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.applicationName()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.applicationName&text=applicationName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.applicationVersion()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.applicationVersion&text=applicationVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.authority()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.authority&text=authority\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.autoDetectRegion()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.autoDetectRegion&text=autoDetectRegion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.azureRegion()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.azureRegion&text=azureRegion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientAuthentication()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientAuthentication&text=clientAuthentication\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientCapabilities()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientCapabilities&text=clientCapabilities\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientId()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientId&text=clientId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.getAccounts()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.getAccounts&text=getAccounts\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.getAuthorizationRequestUrl(com.microsoft.aad.msal4j.AuthorizationRequestUrlParameters)?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.getAuthorizationRequestUrl&text=getAuthorizationRequestUrl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.instanceDiscovery()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.instanceDiscovery&text=instanceDiscovery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.removeAccount(com.microsoft.aad.msal4j.IAccount)?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.removeAccount&text=removeAccount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.tokenCache()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.tokenCache&text=tokenCache\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.validateAuthority()?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase.validateAuthority&text=validateAuthority\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **PublicClientApplication**</br> extends <xref href=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase?alt=com.microsoft.aad.msal4j.AbstractClientApplicationBase&text=AbstractClientApplicationBase\" data-throw-if-not-resolved=\"False\" /></br> implements <xref href=\"com.microsoft.aad.msal4j.IPublicClientApplication?alt=com.microsoft.aad.msal4j.IPublicClientApplication&text=IPublicClientApplication\" data-throw-if-not-resolved=\"False\" />"
methods:
- uid: "com.microsoft.aad.msal4j.PublicClientApplication.acquireToken(com.microsoft.aad.msal4j.DeviceCodeFlowParameters)"
  fullName: "com.microsoft.aad.msal4j.PublicClientApplication.acquireToken(DeviceCodeFlowParameters parameters)"
  name: "acquireToken(DeviceCodeFlowParameters parameters)"
  nameWithType: "PublicClientApplication.acquireToken(DeviceCodeFlowParameters parameters)"
  summary: "Acquires security token from the authority using an device code flow."
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.DeviceCodeFlowParameters?alt=com.microsoft.aad.msal4j.DeviceCodeFlowParameters&text=DeviceCodeFlowParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<IAuthenticationResult> acquireToken(DeviceCodeFlowParameters parameters)"
  desc: "Acquires security token from the authority using an device code flow. Flow is designed for devices that do not have access to a browser or have input constraints. The authorization server issues DeviceCode object with verification code, an end-user code and the end-user verification URI. DeviceCode is provided through deviceCodeConsumer callback. End-user should be instructed to use another device to connect to the authorization server to approve the access request. Since the client cannot receive incoming requests, it polls the authorization server repeatedly until the end-user completes the approval process."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.PublicClientApplication.acquireToken(com.microsoft.aad.msal4j.IntegratedWindowsAuthenticationParameters)"
  fullName: "com.microsoft.aad.msal4j.PublicClientApplication.acquireToken(IntegratedWindowsAuthenticationParameters parameters)"
  name: "acquireToken(IntegratedWindowsAuthenticationParameters parameters)"
  nameWithType: "PublicClientApplication.acquireToken(IntegratedWindowsAuthenticationParameters parameters)"
  summary: "Acquires tokens from the authority configured in the application via Integrated Windows Authentication."
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.IntegratedWindowsAuthenticationParameters?alt=com.microsoft.aad.msal4j.IntegratedWindowsAuthenticationParameters&text=IntegratedWindowsAuthenticationParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<IAuthenticationResult> acquireToken(IntegratedWindowsAuthenticationParameters parameters)"
  desc: "Acquires tokens from the authority configured in the application via Integrated Windows Authentication."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.PublicClientApplication.acquireToken(com.microsoft.aad.msal4j.InteractiveRequestParameters)"
  fullName: "com.microsoft.aad.msal4j.PublicClientApplication.acquireToken(InteractiveRequestParameters parameters)"
  name: "acquireToken(InteractiveRequestParameters parameters)"
  nameWithType: "PublicClientApplication.acquireToken(InteractiveRequestParameters parameters)"
  summary: "Acquires tokens from the authority using authorization code grant."
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.InteractiveRequestParameters?alt=com.microsoft.aad.msal4j.InteractiveRequestParameters&text=InteractiveRequestParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<IAuthenticationResult> acquireToken(InteractiveRequestParameters parameters)"
  desc: "Acquires tokens from the authority using authorization code grant. Will attempt to open the default system browser where the user can input the credentials interactively, consent to scopes, and do multi-factor authentication if such a policy is enabled on the Azure AD tenant. System browser can behavior can be customized via <xref uid=\"com.microsoft.aad.msal4j.InteractiveRequestParameters.systemBrowserOptions*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveRequestParameters#systemBrowserOptions\"></xref>. For more information, see https://aka.ms/msal4j-interactive-request"
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.PublicClientApplication.acquireToken(com.microsoft.aad.msal4j.UserNamePasswordParameters)"
  fullName: "com.microsoft.aad.msal4j.PublicClientApplication.acquireToken(UserNamePasswordParameters parameters)"
  name: "acquireToken(UserNamePasswordParameters parameters)"
  nameWithType: "PublicClientApplication.acquireToken(UserNamePasswordParameters parameters)"
  summary: "Acquires tokens from the authority configured in the application via Username/Password authentication."
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.UserNamePasswordParameters?alt=com.microsoft.aad.msal4j.UserNamePasswordParameters&text=UserNamePasswordParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<IAuthenticationResult> acquireToken(UserNamePasswordParameters parameters)"
  desc: "Acquires tokens from the authority configured in the application via Username/Password authentication."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.PublicClientApplication.acquireTokenSilently(com.microsoft.aad.msal4j.SilentParameters)"
  fullName: "com.microsoft.aad.msal4j.PublicClientApplication.acquireTokenSilently(SilentParameters parameters)"
  name: "acquireTokenSilently(SilentParameters parameters)"
  nameWithType: "PublicClientApplication.acquireTokenSilently(SilentParameters parameters)"
  summary: "Returns tokens from cache if present and not expired or acquires new tokens from the authority by using the refresh token present in cache."
  overridden: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireTokenSilently(com.microsoft.aad.msal4j.SilentParameters)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.SilentParameters?alt=com.microsoft.aad.msal4j.SilentParameters&text=SilentParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<IAuthenticationResult> acquireTokenSilently(SilentParameters parameters)"
  exceptions:
  - type: "<xref href=\"java.net.MalformedURLException?alt=java.net.MalformedURLException&text=MalformedURLException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Returns tokens from cache if present and not expired or acquires new tokens from the authority by using the refresh token present in cache."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.PublicClientApplication.builder(java.lang.String)"
  fullName: "com.microsoft.aad.msal4j.PublicClientApplication.builder(String clientId)"
  name: "builder(String clientId)"
  nameWithType: "PublicClientApplication.builder(String clientId)"
  modifiers:
  - "static"
  parameters:
  - description: "Client ID (Application ID) of the application as registered\n                 in the application registration portal (portal.azure.com)"
    name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PublicClientApplication.Builder builder(String clientId)"
  returns:
    description: "instance of Builder of PublicClientApplication"
    type: "<xref href=\"com.microsoft.aad.msal4j.PublicClientApplication.Builder?alt=com.microsoft.aad.msal4j.PublicClientApplication.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.PublicClientApplication.clientAuthentication()"
  fullName: "com.microsoft.aad.msal4j.PublicClientApplication.clientAuthentication()"
  name: "clientAuthentication()"
  nameWithType: "PublicClientApplication.clientAuthentication()"
  modifiers:
  - "protected"
  overridden: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientAuthentication()"
  syntax: "protected ClientAuthentication clientAuthentication()"
  returns:
    type: "<xref href=\"com.nimbusds.oauth2.sdk.auth.ClientAuthentication?alt=com.nimbusds.oauth2.sdk.auth.ClientAuthentication&text=ClientAuthentication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.PublicClientApplication.removeAccount(com.microsoft.aad.msal4j.IAccount)"
  fullName: "com.microsoft.aad.msal4j.PublicClientApplication.removeAccount(IAccount account)"
  name: "removeAccount(IAccount account)"
  nameWithType: "PublicClientApplication.removeAccount(IAccount account)"
  summary: "Removes IAccount from the cache"
  overridden: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.removeAccount(com.microsoft.aad.msal4j.IAccount)"
  parameters:
  - name: "account"
    type: "<xref href=\"com.microsoft.aad.msal4j.IAccount?alt=com.microsoft.aad.msal4j.IAccount&text=IAccount\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<Void> removeAccount(IAccount account)"
  desc: "Removes IAccount from the cache"
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Class to be used to acquire tokens for public client applications (Desktop, Mobile). For details see <xref uid=\"com.microsoft.aad.msal4j.IPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IPublicClientApplication\"></xref>\n\nConditionally thread-safe"
implements:
- "<xref href=\"com.microsoft.aad.msal4j.IPublicClientApplication?alt=com.microsoft.aad.msal4j.IPublicClientApplication&text=IPublicClientApplication\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.aad.msal4j"
artifact: com.microsoft.azure:msal4j:1.17.2
