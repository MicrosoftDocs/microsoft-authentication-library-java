### YamlMime:JavaType
uid: "com.microsoft.aad.msal4j.OSHelper"
fullName: "com.microsoft.aad.msal4j.OSHelper"
name: "OSHelper"
nameWithType: "OSHelper"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **OSHelper**"
constructors:
- uid: "com.microsoft.aad.msal4j.OSHelper.OSHelper()"
  fullName: "com.microsoft.aad.msal4j.OSHelper.OSHelper()"
  name: "OSHelper()"
  nameWithType: "OSHelper.OSHelper()"
  syntax: "public OSHelper()"
methods:
- uid: "com.microsoft.aad.msal4j.OSHelper.getOs()"
  fullName: "com.microsoft.aad.msal4j.OSHelper.getOs()"
  name: "getOs()"
  nameWithType: "OSHelper.getOs()"
  modifiers:
  - "static"
  syntax: "public static String getOs()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.OSHelper.isLinux()"
  fullName: "com.microsoft.aad.msal4j.OSHelper.isLinux()"
  name: "isLinux()"
  nameWithType: "OSHelper.isLinux()"
  modifiers:
  - "static"
  syntax: "public static boolean isLinux()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.OSHelper.isMac()"
  fullName: "com.microsoft.aad.msal4j.OSHelper.isMac()"
  name: "isMac()"
  nameWithType: "OSHelper.isMac()"
  modifiers:
  - "static"
  syntax: "public static boolean isMac()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.OSHelper.isWindows()"
  fullName: "com.microsoft.aad.msal4j.OSHelper.isWindows()"
  name: "isWindows()"
  nameWithType: "OSHelper.isWindows()"
  modifiers:
  - "static"
  syntax: "public static boolean isWindows()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.aad.msal4j"
artifact: com.microsoft.azure:msal4j:1.16.2
