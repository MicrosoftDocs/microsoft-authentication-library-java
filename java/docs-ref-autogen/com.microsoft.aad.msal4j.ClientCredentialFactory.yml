### YamlMime:JavaType
uid: "com.microsoft.aad.msal4j.ClientCredentialFactory"
fullName: "com.microsoft.aad.msal4j.ClientCredentialFactory"
name: "ClientCredentialFactory"
nameWithType: "ClientCredentialFactory"
summary: "Factory for creating client credentials used in confidential client flows."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **ClientCredentialFactory**"
constructors:
- uid: "com.microsoft.aad.msal4j.ClientCredentialFactory.ClientCredentialFactory()"
  fullName: "com.microsoft.aad.msal4j.ClientCredentialFactory.ClientCredentialFactory()"
  name: "ClientCredentialFactory()"
  nameWithType: "ClientCredentialFactory.ClientCredentialFactory()"
  syntax: "public ClientCredentialFactory()"
methods:
- uid: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromCallback(java.util.concurrent.Callable<java.lang.String>)"
  fullName: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromCallback(Callable<String> callable)"
  name: "createFromCallback(Callable<String> callable)"
  nameWithType: "ClientCredentialFactory.createFromCallback(Callable<String> callable)"
  summary: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientAssertion\"></xref> instance from a provided Callable."
  modifiers:
  - "static"
  parameters:
  - description: "Callable that produces a JWT token encoded as a base64 URL encoded string"
    name: "callable"
    type: "<xref href=\"java.util.concurrent.Callable?alt=java.util.concurrent.Callable&text=Callable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static IClientAssertion createFromCallback(Callable<String> callable)"
  exceptions:
  - type: "<xref href=\"java.util.concurrent.ExecutionException?alt=java.util.concurrent.ExecutionException&text=ExecutionException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientAssertion\"></xref> instance from a provided Callable."
  returns:
    description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientAssertion\"></xref>"
    type: "<xref href=\"com.microsoft.aad.msal4j.IClientAssertion?alt=com.microsoft.aad.msal4j.IClientAssertion&text=IClientAssertion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromCertificate(java.io.InputStream,java.lang.String)"
  fullName: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromCertificate(InputStream pkcs12Certificate, String password)"
  name: "createFromCertificate(InputStream pkcs12Certificate, String password)"
  nameWithType: "ClientCredentialFactory.createFromCertificate(InputStream pkcs12Certificate, String password)"
  summary: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref> instance from a password-protected certificate."
  modifiers:
  - "static"
  parameters:
  - description: "InputStream containing PCKS12 formatted certificate"
    name: "pkcs12Certificate"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "certificate password"
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static IClientCertificate createFromCertificate(InputStream pkcs12Certificate, String password)"
  exceptions:
  - type: "<xref href=\"java.security.cert.CertificateException?alt=java.security.cert.CertificateException&text=CertificateException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"java.security.UnrecoverableKeyException?alt=java.security.UnrecoverableKeyException&text=UnrecoverableKeyException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"java.security.NoSuchAlgorithmException?alt=java.security.NoSuchAlgorithmException&text=NoSuchAlgorithmException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"java.security.KeyStoreException?alt=java.security.KeyStoreException&text=KeyStoreException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"java.security.NoSuchProviderException?alt=java.security.NoSuchProviderException&text=NoSuchProviderException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref> instance from a password-protected certificate."
  returns:
    description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref>"
    type: "<xref href=\"com.microsoft.aad.msal4j.IClientCertificate?alt=com.microsoft.aad.msal4j.IClientCertificate&text=IClientCertificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromCertificate(java.security.PrivateKey,java.security.cert.X509Certificate)"
  fullName: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromCertificate(PrivateKey key, X509Certificate publicKeyCertificate)"
  name: "createFromCertificate(PrivateKey key, X509Certificate publicKeyCertificate)"
  nameWithType: "ClientCredentialFactory.createFromCertificate(PrivateKey key, X509Certificate publicKeyCertificate)"
  summary: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref> instance from a private key/public certificate pair."
  modifiers:
  - "static"
  parameters:
  - description: "RSA private key to sign the assertion."
    name: "key"
    type: "<xref href=\"java.security.PrivateKey?alt=java.security.PrivateKey&text=PrivateKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "x509 public certificate used for thumbprint"
    name: "publicKeyCertificate"
    type: "<xref href=\"java.security.cert.X509Certificate?alt=java.security.cert.X509Certificate&text=X509Certificate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static IClientCertificate createFromCertificate(PrivateKey key, X509Certificate publicKeyCertificate)"
  desc: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref> instance from a private key/public certificate pair."
  returns:
    description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref>"
    type: "<xref href=\"com.microsoft.aad.msal4j.IClientCertificate?alt=com.microsoft.aad.msal4j.IClientCertificate&text=IClientCertificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromCertificateChain(java.security.PrivateKey,java.util.List<java.security.cert.X509Certificate>)"
  fullName: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromCertificateChain(PrivateKey key, List<X509Certificate> publicKeyCertificateChain)"
  name: "createFromCertificateChain(PrivateKey key, List<X509Certificate> publicKeyCertificateChain)"
  nameWithType: "ClientCredentialFactory.createFromCertificateChain(PrivateKey key, List<X509Certificate> publicKeyCertificateChain)"
  summary: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref> instance from a certificate chain."
  modifiers:
  - "static"
  parameters:
  - description: "RSA private key to sign the assertion."
    name: "key"
    type: "<xref href=\"java.security.PrivateKey?alt=java.security.PrivateKey&text=PrivateKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "ordered with the user's certificate first followed by zero or more certificate authorities"
    name: "publicKeyCertificateChain"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.security.cert.X509Certificate?alt=java.security.cert.X509Certificate&text=X509Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static IClientCertificate createFromCertificateChain(PrivateKey key, List<X509Certificate> publicKeyCertificateChain)"
  desc: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref> instance from a certificate chain."
  returns:
    description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientCertificate\"></xref>"
    type: "<xref href=\"com.microsoft.aad.msal4j.IClientCertificate?alt=com.microsoft.aad.msal4j.IClientCertificate&text=IClientCertificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromClientAssertion(java.lang.String)"
  fullName: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromClientAssertion(String clientAssertion)"
  name: "createFromClientAssertion(String clientAssertion)"
  nameWithType: "ClientCredentialFactory.createFromClientAssertion(String clientAssertion)"
  summary: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientAssertion\"></xref> instance from a JWT token encoded as a base64 URL encoded string."
  modifiers:
  - "static"
  parameters:
  - description: "JWT token encoded as a base64 URL encoded string"
    name: "clientAssertion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static IClientAssertion createFromClientAssertion(String clientAssertion)"
  desc: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientAssertion\"></xref> instance from a JWT token encoded as a base64 URL encoded string."
  returns:
    description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientAssertion\"></xref>"
    type: "<xref href=\"com.microsoft.aad.msal4j.IClientAssertion?alt=com.microsoft.aad.msal4j.IClientAssertion&text=IClientAssertion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromSecret(java.lang.String)"
  fullName: "com.microsoft.aad.msal4j.ClientCredentialFactory.createFromSecret(String secret)"
  name: "createFromSecret(String secret)"
  nameWithType: "ClientCredentialFactory.createFromSecret(String secret)"
  summary: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientSecret\"></xref> instance from a client secret"
  modifiers:
  - "static"
  parameters:
  - description: "secret of application requesting a token"
    name: "secret"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static IClientSecret createFromSecret(String secret)"
  desc: "Static method to create a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientSecret\"></xref> instance from a client secret"
  returns:
    description: "<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientSecret\"></xref>"
    type: "<xref href=\"com.microsoft.aad.msal4j.IClientSecret?alt=com.microsoft.aad.msal4j.IClientSecret&text=IClientSecret\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Factory for creating client credentials used in confidential client flows. For more details, see https://aka.ms/msal4j-client-credentials"
metadata: {}
package: "com.microsoft.aad.msal4j"
artifact: com.microsoft.azure:msal4j:1.16.2
