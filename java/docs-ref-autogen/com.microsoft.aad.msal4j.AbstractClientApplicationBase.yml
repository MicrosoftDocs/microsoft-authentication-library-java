### YamlMime:JavaType
uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase"
fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase"
name: "AbstractClientApplicationBase"
nameWithType: "AbstractClientApplicationBase"
summary: "Abstract class containing common methods and properties to both <xref uid=\"com.microsoft.aad.msal4j.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> and <xref uid=\"com.microsoft.aad.msal4j.ConfidentialClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfidentialClientApplication\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase?alt=com.microsoft.aad.msal4j.AbstractApplicationBase&text=AbstractApplicationBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.connectTimeoutForDefaultHttpClient()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.connectTimeoutForDefaultHttpClient&text=connectTimeoutForDefaultHttpClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.correlationId()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.correlationId&text=correlationId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.httpClient()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.httpClient&text=httpClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.logPii()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.logPii&text=logPii\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.proxy()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.proxy&text=proxy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.readTimeoutForDefaultHttpClient()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.readTimeoutForDefaultHttpClient&text=readTimeoutForDefaultHttpClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase.sslSocketFactory()?alt=com.microsoft.aad.msal4j.AbstractApplicationBase.sslSocketFactory&text=sslSocketFactory\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public abstract class **AbstractClientApplicationBase**</br> extends <xref href=\"com.microsoft.aad.msal4j.AbstractApplicationBase?alt=com.microsoft.aad.msal4j.AbstractApplicationBase&text=AbstractApplicationBase\" data-throw-if-not-resolved=\"False\" /></br> implements <xref href=\"com.microsoft.aad.msal4j.IClientApplicationBase?alt=com.microsoft.aad.msal4j.IClientApplicationBase&text=IClientApplicationBase\" data-throw-if-not-resolved=\"False\" />"
fields:
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.azureRegion"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.azureRegion"
  name: "azureRegion"
  nameWithType: "AbstractClientApplicationBase.azureRegion"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected String azureRegion"
methods:
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.aadAadInstanceDiscoveryResponse()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.aadAadInstanceDiscoveryResponse()"
  name: "aadAadInstanceDiscoveryResponse()"
  nameWithType: "AbstractClientApplicationBase.aadAadInstanceDiscoveryResponse()"
  syntax: "public AadInstanceDiscoveryResponse aadAadInstanceDiscoveryResponse()"
  returns:
    type: "<xref href=\"com.microsoft.aad.msal4j.AadInstanceDiscoveryResponse?alt=com.microsoft.aad.msal4j.AadInstanceDiscoveryResponse&text=AadInstanceDiscoveryResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken(com.microsoft.aad.msal4j.AuthorizationCodeParameters)"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken(AuthorizationCodeParameters parameters)"
  name: "acquireToken(AuthorizationCodeParameters parameters)"
  nameWithType: "AbstractClientApplicationBase.acquireToken(AuthorizationCodeParameters parameters)"
  summary: "Acquires security token from the authority using an authorization code previously received."
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.AuthorizationCodeParameters?alt=com.microsoft.aad.msal4j.AuthorizationCodeParameters&text=AuthorizationCodeParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<IAuthenticationResult> acquireToken(AuthorizationCodeParameters parameters)"
  desc: "Acquires security token from the authority using an authorization code previously received."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken(com.microsoft.aad.msal4j.RefreshTokenParameters)"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken(RefreshTokenParameters parameters)"
  name: "acquireToken(RefreshTokenParameters parameters)"
  nameWithType: "AbstractClientApplicationBase.acquireToken(RefreshTokenParameters parameters)"
  summary: "Acquires a security token from the authority using a refresh token previously received."
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.RefreshTokenParameters?alt=com.microsoft.aad.msal4j.RefreshTokenParameters&text=RefreshTokenParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<IAuthenticationResult> acquireToken(RefreshTokenParameters parameters)"
  desc: "Acquires a security token from the authority using a refresh token previously received. Can be used in migration to MSAL from ADAL, and in various integration scenarios where you have a refresh token available."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireTokenSilently(com.microsoft.aad.msal4j.SilentParameters)"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireTokenSilently(SilentParameters parameters)"
  name: "acquireTokenSilently(SilentParameters parameters)"
  nameWithType: "AbstractClientApplicationBase.acquireTokenSilently(SilentParameters parameters)"
  summary: "Returns tokens from cache if present and not expired or acquires new tokens from the authority by using the refresh token present in cache."
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.SilentParameters?alt=com.microsoft.aad.msal4j.SilentParameters&text=SilentParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<IAuthenticationResult> acquireTokenSilently(SilentParameters parameters)"
  exceptions:
  - type: "<xref href=\"java.net.MalformedURLException?alt=java.net.MalformedURLException&text=MalformedURLException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Returns tokens from cache if present and not expired or acquires new tokens from the authority by using the refresh token present in cache."
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.applicationName()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.applicationName()"
  name: "applicationName()"
  nameWithType: "AbstractClientApplicationBase.applicationName()"
  syntax: "public String applicationName()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.applicationVersion()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.applicationVersion()"
  name: "applicationVersion()"
  nameWithType: "AbstractClientApplicationBase.applicationVersion()"
  syntax: "public String applicationVersion()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.authority()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.authority()"
  name: "authority()"
  nameWithType: "AbstractClientApplicationBase.authority()"
  syntax: "public String authority()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.autoDetectRegion()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.autoDetectRegion()"
  name: "autoDetectRegion()"
  nameWithType: "AbstractClientApplicationBase.autoDetectRegion()"
  syntax: "public boolean autoDetectRegion()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.azureRegion()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.azureRegion()"
  name: "azureRegion()"
  nameWithType: "AbstractClientApplicationBase.azureRegion()"
  syntax: "public String azureRegion()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientAuthentication()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientAuthentication()"
  name: "clientAuthentication()"
  nameWithType: "AbstractClientApplicationBase.clientAuthentication()"
  modifiers:
  - "protected"
  - "abstract"
  syntax: "protected abstract ClientAuthentication clientAuthentication()"
  returns:
    type: "<xref href=\"com.nimbusds.oauth2.sdk.auth.ClientAuthentication?alt=com.nimbusds.oauth2.sdk.auth.ClientAuthentication&text=ClientAuthentication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientCapabilities()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientCapabilities()"
  name: "clientCapabilities()"
  nameWithType: "AbstractClientApplicationBase.clientCapabilities()"
  syntax: "public String clientCapabilities()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientId()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.clientId()"
  name: "clientId()"
  nameWithType: "AbstractClientApplicationBase.clientId()"
  syntax: "public String clientId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.getAccounts()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.getAccounts()"
  name: "getAccounts()"
  nameWithType: "AbstractClientApplicationBase.getAccounts()"
  summary: "Returns accounts in the cache"
  syntax: "public CompletableFuture<Set<IAccount>> getAccounts()"
  desc: "Returns accounts in the cache"
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.aad.msal4j.IAccount?alt=com.microsoft.aad.msal4j.IAccount&text=IAccount\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.getAuthorizationRequestUrl(com.microsoft.aad.msal4j.AuthorizationRequestUrlParameters)"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.getAuthorizationRequestUrl(AuthorizationRequestUrlParameters parameters)"
  name: "getAuthorizationRequestUrl(AuthorizationRequestUrlParameters parameters)"
  nameWithType: "AbstractClientApplicationBase.getAuthorizationRequestUrl(AuthorizationRequestUrlParameters parameters)"
  summary: "Computes the URL of the authorization request letting the user sign-in and consent to the application."
  parameters:
  - name: "parameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.AuthorizationRequestUrlParameters?alt=com.microsoft.aad.msal4j.AuthorizationRequestUrlParameters&text=AuthorizationRequestUrlParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public URL getAuthorizationRequestUrl(AuthorizationRequestUrlParameters parameters)"
  desc: "Computes the URL of the authorization request letting the user sign-in and consent to the application. The URL target the /authorize endpoint of the authority configured in the application object.\n\nOnce the user successfully authenticates, the response should contain an authorization code, which can then be passed in to<xref uid=\"com.microsoft.aad.msal4j.AbstractClientApplicationBase.acquireToken(com.microsoft.aad.msal4j.AuthorizationCodeParameters)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AbstractClientApplicationBase#acquireToken(AuthorizationCodeParameters)\"></xref> to be exchanged for a token"
  returns:
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.instanceDiscovery()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.instanceDiscovery()"
  name: "instanceDiscovery()"
  nameWithType: "AbstractClientApplicationBase.instanceDiscovery()"
  syntax: "public boolean instanceDiscovery()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.removeAccount(com.microsoft.aad.msal4j.IAccount)"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.removeAccount(IAccount account)"
  name: "removeAccount(IAccount account)"
  nameWithType: "AbstractClientApplicationBase.removeAccount(IAccount account)"
  summary: "Removes IAccount from the cache"
  parameters:
  - name: "account"
    type: "<xref href=\"com.microsoft.aad.msal4j.IAccount?alt=com.microsoft.aad.msal4j.IAccount&text=IAccount\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<Void> removeAccount(IAccount account)"
  desc: "Removes IAccount from the cache"
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.tokenCache()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.tokenCache()"
  name: "tokenCache()"
  nameWithType: "AbstractClientApplicationBase.tokenCache()"
  syntax: "public TokenCache tokenCache()"
  returns:
    type: "<xref href=\"com.microsoft.aad.msal4j.TokenCache?alt=com.microsoft.aad.msal4j.TokenCache&text=TokenCache\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.validateAuthority()"
  fullName: "com.microsoft.aad.msal4j.AbstractClientApplicationBase.validateAuthority()"
  name: "validateAuthority()"
  nameWithType: "AbstractClientApplicationBase.validateAuthority()"
  syntax: "public boolean validateAuthority()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Abstract class containing common methods and properties to both <xref uid=\"com.microsoft.aad.msal4j.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> and <xref uid=\"com.microsoft.aad.msal4j.ConfidentialClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfidentialClientApplication\"></xref>."
implements:
- "<xref href=\"com.microsoft.aad.msal4j.IClientApplicationBase?alt=com.microsoft.aad.msal4j.IClientApplicationBase&text=IClientApplicationBase\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.aad.msal4j"
artifact: com.microsoft.azure:msal4j:1.17.2
